name: Collect Minecraft UUID
on:
  issues:
    types: [locked]

jobs:
  add-uuid:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Add UUID to SIGNERS.json
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            // Get username from issue title or body
            const issue = context.payload.issue;
            const username = issue.body.username; // Or parse from issue body as needed
            
            try {
              // Fetch Minecraft UUID
              const response = await fetch(`https://playerdb.co/api/player/minecraft/${username}`);
              const data = await response.json();
              
              if (!data.success) {
                throw new Error('Failed to fetch player data');
              }
              
              const playerUUID = data.data.player.id;
              
              // Read existing SIGNERS.json
              let signers = [];
              try {
                const signersContent = fs.readFileSync('SIGNERS.json', 'utf8');
                signers = JSON.parse(signersContent);
              } catch (error) {
                // File doesn't exist or is invalid, start with empty array
              }
              
            // Add new UUID if it doesn't exist
            signers.push(playerUUID);
            
            // Write back to file
            fs.writeFileSync('SIGNERS.json', JSON.stringify(signers, null, 2));
            
            // Commit and push changes
            await exec.exec('git', ['config', '--global', 'user.email', 'github-actions[bot]@users.noreply.github.com']);
            await exec.exec('git', ['config', '--global', 'user.name', 'github-actions[bot]']);
            await exec.exec('git', ['add', 'SIGNERS.json']);
            await exec.exec('git', ['commit', '-m', `Add UUID for ${username}`]);
            await exec.exec('git', ['push']);
            } catch (error) {
              core.setFailed(`Action failed: ${error.message}`);
            }